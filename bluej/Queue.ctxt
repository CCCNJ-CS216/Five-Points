#BlueJ class context
comment0.params=
comment0.target=Queue()
comment0.text=\n\ No-argument\ constructor\ for\ class\ queue.\n
comment1.params=initialList
comment1.target=Queue(java.util.ArrayList)
comment1.text=\n\ Initialize\ a\ queue\ with\ an\ itial\ list\n\ @param\ initialList\ The\ initial\ list\n
comment2.params=
comment2.target=boolean\ isEmpty()
comment2.text=\n\ Check\ to\ see\ if\ the\ queue\ is\ empty.\n\ @return\ true\ if\ empty,\ false\ otherwise.\n
comment3.params=
comment3.target=java.lang.Object\ front()
comment3.text=\n\ Get\ the\ first\ item\ of\ the\ queue\ without\n\ mutating\ the\ queue\ itself\n\ @return\ The\ front\ item,\ or\ null\ if\ the\ queue\ is\ empty.\n
comment4.params=
comment4.target=java.lang.Object\ dequeue()
comment4.text=\n\ Dequeue\ (i.e\ remove\ from\ the\ list\ and\ return)\ the\ front\ element.\n\ @return\ The\ removed\ front\ item,\ or\ null\ if\ the\ queue\ is\ empty.\n
comment5.params=data
comment5.target=void\ enqueue(java.lang.Object)
comment5.text=\n\ Enqueue\ (i.e\ put\ onto\ the\ back\ of\ the\ queue)\ a\ piece\ of\ data.\n\ @param\ data\ -\ Te\ data\ to\ enque\n
comment6.params=
comment6.target=Queue\ clone()
comment6.text=\n\ Makes\ a\ new\ Queue\ that\ is\ a\ shallow\ copy\ of\ this\ queue\n\ @return\ Queue\n
comment7.params=
comment7.target=boolean\ isFull()
comment7.text=\n\ A\ really\ cool\ way\ to\ say\ "false",\ apparently.\n\ @return\ false.\ Literally\ always.\ Regardless\ of\ if\ ands\ and\ buts.\n
comment8.params=
comment8.target=int\ size()
comment8.text=\n\ Get\ the\ size\ of\ the\ queue\n\ @return\ Queue\ size\n
comment9.params=location
comment9.target=java.lang.Object\ peek(int)
comment9.text=\n\ Peek\ at\ an\ element\ in\ the\ queue.\ \ Element\ can\ be\ at\ any\ location.\n\ @param\ location\ -\ location\ in\ queue.\n\ @return\ element\ at\ the\ location.\n
numComments=10
